services:
  app:
    container_name: app
    build: ./webapp/
    restart: on-failure
    env_file:
      - ./webapp/.env
    environment:
      "POSTGRES_HOST": postgres
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:15.3-bookworm
    env_file:
      - ./postgres/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./postgres/sql:/docker-entrypoint-initdb.d
    networks:
      - net
    command:
      - "postgres"
      - "-c"
      - "max_connections=1000"
      - "-c"
      - "shared_buffers=1GB"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  nginx:
    image: nginx:1.25.0-bullseye
    container_name: nginx
    restart: on-failure
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "80:80"
    networks:
      - net
    depends_on:
      app:
        condition: service_started

volumes:
  mongo:
  postgres:

networks:
  net:
    driver: bridge
